<style>
  .image-container img {
      width: 10vw;
      height: 35vh;
      max-width: 10vw;
      min-width: 10vw;
      min-height: 35vh;
      max-height: 35vh;
      /* height: 200px;  */
    }
    .image-container{
      max-height: 10vw;
      min-width: 10vw;
      max-width: 15vw;
    }
    img{
      max-height: 20vh;
      min-height: 20vh;
      max-width: 10vw;
      min-width: 10vw;
    }
</style>

<div class="container bg-white mt-3">
    <div class="row">
        <div class="col-lg-6 mt-3">
            <h2 class="fw-bold">EDIT PRODUCTS</h2>
            <form style="margin-top: 2em;" id="form">

            <input id="productId" value="{{product._id}}" hidden>

                <div class="mb-3">
                  <label for="brand" class="form-label">Brand</label>
                  <input type="text" class="form-control" id="brand" value="{{product.brand}}" name="brand" aria-describedby="emailHelp" required>
                </div>

                <div class="mb-3">
                  <label for="category" class="form-label">category</label>
                  <select class="form-control" id="selectOption" name="category" required>
                    <option value="{{category._id}}" hidden> {{category.name}} </option>
                    {{#each categories}}
                      <option value="{{this._id}}"> {{this.name}} </option>
                    {{/each}}
                  </select>
                </div>

                <div class="mb-3">
                  <label for="name" class="form-label">Model Name</label>
                  <input type="text" class="form-control" id="name" name="name" aria-describedby="emailHelp" value="{{product.name}}" required>
                </div>
                <div class="mb-3">
                  <label for="description" class="form-label">Description</label>
                  <input type="text" class="form-control" id="description" name="description" value="{{product.description}}" required>
                </div>
                <div class="mb-3">
                  <label for="lgdescription" class="form-label">Detail Description</label>
                  <input type="text" class="form-control" id="lgdescription" name="lgdescription" value="{{product.lgdescription}}" required>
                </div>
                <div class="mb-3">
                  <label for="my-select">size :</label>
                  <select class="mul-select form-control" id="my-select" multiple="true" name="size" required>
                    <option id="prev" value="{{product.size}}"></option>
                    <option value="small">Small</option>
                    <option value="medium">Medium</option>
                    <option value="large">Large</option>
                  </select>
                </div>
                <div class="mb-3">
                  <label for="price" class="form-label">Price</label>
                  <input type="text" class="form-control" value="{{product.price}}" id="price" name="price" required>
                </div>
                <div class="mb-3">
                  <label for="discountPerc" class="form-label">Discount in percentage</label>
                  <input type="text" id="discountPerc" value="{{product.discountPerc}}" class="form-control" name="discountPerc" required>
                </div>
                <div class="mb-3">
                  <label for="discountPrice" class="form-label">Discount price</label>
                  <input id="discountPrice" style="color: black;border: none;" value="{{product.discountPrice}}" name="discountPrice" disabled>
                </div>

                <label for="image" class="form-label">Image : </label>
                {{#each product.images}}
                <div class="mb-3" style="display: inline-block;">
                    <img src="{{this}}" style="width: 80px;height: 80px;margin-left: 2rem;"><br><br>
                </div>
                {{/each}}
                <input type="file" id="file-input" class="form-control" multiple>
                <div class="image-container pb-2"></div>

                <div class="mb-3">
                  <div class="croppedImg-container" style="display: flex;"></div>
                </div>

                {{!-- <input type="text" class="form-control d-none" name="listingStatus" value="true"> --}}

                <div class="text-center mt-4">
                    <button id="saveBtn" class="btn btn-primary py-3 ml-auto">Submit</button>
                </div>
            </form>
        </div>
    </div>
</div>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.0/css/select2.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.0/js/select2.min.js"></script>


{{!-- calculating price appropiate for discount percentage --}}
<script>
  const num1 = document.getElementById("price");
  const num2 = document.getElementById("discountPerc");
  const result = document.getElementById("discountPrice");

  function performCalculation() {
    const value1 = parseFloat(num1.value);
    const value2 = parseFloat(num2.value);
    const sum = value1 - (value1 * value2)/100;
    result.value = sum;
  }

  num1.addEventListener("input", performCalculation);
  num2.addEventListener("input", performCalculation);

  function enableInput() {
      result.disabled = false;
  }
</script>

{{!-- size multiselect --}}
<script>
    var prev = document.getElementById('prev').value;
    $(document).ready(function(){
      $(".mul-select").select2({
          placeholder: prev, //placeholder
          tags: true,
          tokenSeparators: ['/',',',';'," "] 
      });
    })
</script>

{{!-- ajax sending-form after cropping --}}
<script>
  $(document).ready(function() {
      const fileInput = document.getElementById('file-input');
      const imageContainer = document.querySelector('.image-container');
      const croppedContainer = document.querySelector('.croppedImg-container');
      const croppers = [];

      fileInput.addEventListener('change', (event) => {
        let files = event.target.files;

        document.getElementById('saveBtn').classList.add('d-block');

        for(let i=0;i<files.length;i++){
          let file = files[i];
          const fileUrl = URL.createObjectURL(file);
          let image = document.createElement('img');
          image.src = fileUrl;

          image.onload = ()=>{
            const cropper = new Cropper(image, {
              aspectRatio: 0,
              viewMode: 0,
            });
            croppers.push(cropper);
          };
          imageContainer.appendChild(image);
        }
        //console.log(croppers);
      });

      const saveBtn = document.getElementById('saveBtn');
      saveBtn.addEventListener('click', (e) => {
        e.preventDefault();
        imageContainer.classList.add('d-none');
        document.getElementById('saveBtn').classList.replace('d-block', 'd-none');

        async function sendForm() {
          let formData = new FormData();
          let index = 0;

          for (let i = 0; i < croppers.length; i++) {
            const croppedImage = croppers[i].getCroppedCanvas().toDataURL();
            //console.log(croppedImage);

            const output = document.createElement('img');
            output.src = croppedImage;
            croppedContainer.appendChild(output);

            const blob = await new Promise(resolve => 
              croppers[i].getCroppedCanvas().toBlob(resolve, 'image/jpeg', 0.3)
            );
            console.log(blob);

            formData.append('images', blob, `image-${index}.jpg`);
            index++;
          }

          //form-data
          formData.append('brand', `${document.getElementById('brand').value}`);
          formData.append('name', `${document.getElementById('name').value}`);
          formData.append('category', `${document.getElementById('selectOption').value}`);
          formData.append('description', `${document.getElementById('description').value}`);
          formData.append('lgdescription', `${document.getElementById('lgdescription').value}`);
          //formData.append('size', `${document.getElementById('my-select').value}`);
          const selectedSizes = Array.from(document.getElementById('my-select').selectedOptions).map(option => option.value);
          formData.append('size', selectedSizes);
          formData.append('price', document.getElementById('price').value);
          formData.append('discountPerc', document.getElementById('discountPerc').value);
          formData.append('discountPrice', document.getElementById('discountPrice').value);
          //formData.append('listingStatus', document.getElementById('listingStatus').value);

          const proId = document.getElementById("productId").value;

          console.log(formData);

          axios.post(`/admin/editProduct/${proId}`, formData, {
            headers: {
              'Content-Type': 'multipart/form-data'
            }
          })
          .then(response => {
            console.log(response);
            Toastify({
			      	text: response.data.message,
			      	duration: 3000,
			      	gravity: "top",
			      	position: "center",
			      	style: {
			      		background: "linear-gradient(to right, #fe6d00, #ffb900)",
			      	},
			      }).showToast();
			      setTimeout(()=>{
			      	location.href = '/admin/admin-view';
			      }, 650);
          })
          .catch(error => {
            console.log(error);
            Toastify({
			      	text: "product editing failed",
			      	duration: 3000,
			      	gravity: "top",
			      	position: "center",
			      	style: {
			      		background: "linear-gradient(to right, #fe6d00, #ffb900)",
			      	},
			      }).showToast();
			      setTimeout(()=>{
			      	location.reload();
			      }, 950);
          });
        }

        function validateForm() {
          let form = document.getElementById("form");
          let inputs = form.getElementsByTagName("input");
          let isFormValid = true;

          for(let i = 0; i < inputs.length; i++) {
            if(inputs[i].hasAttribute("required") && inputs[i].value === "") {
              isFormValid = false;
              inputs[i].style.borderColor = "red";
            }else {
              inputs[i].style.borderColor = "";
            }
          }

          return isFormValid;
        }
        if(validateForm()){
          sendForm();
        }else{
          Toastify({
			      	text: "fill all the field",
			      	duration: 3000,
			      	gravity: "top",
			      	position: "center",
			      	style: {
			      		background: "linear-gradient(to right, #fe6d00, #ffb900)",
			      	},
			      }).showToast();
            setTimeout(()=>{
			      	location.reload();
			      }, 650);
        }
      });
  });
</script>
